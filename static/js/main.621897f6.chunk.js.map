{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","App.module.css","redux/phonebook-actions.js","redux/phonebook-operations.js","components/ContactForm/ContactForm.js","redux/phonebook-selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","Axios","defaults","baseURL","text","dispatch","actions","contact","id","shortid","generate","name","number","post","then","data","catch","error","contactId","delete","ContactForm","state","onNameChange","e","setState","currentTarget","value","onNumberChange","handleSubmit","preventDefault","props","onSubmit","alert","className","s","containerForm","this","formInput","type","onChange","btnForm","Component","connect","phonebookOperations","getAllContacts","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normolizedFilter","toLowerCase","includes","contactsSelectors","onDeleteContact","listOfContact","map","itemOfListContact","itemNameContact","itemNumberContact","btnOfListContact","onClick","onChangeFilter","filterLabel","filterInput","App","container","createReducer","_","payload","find","message","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","phonebookReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.621897f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listOfContact\":\"ContactList_listOfContact__IhDtS\",\"itemOfListContact\":\"ContactList_itemOfListContact__NP_EL\",\"itemNameContact\":\"ContactList_itemNameContact__dosVQ\",\"itemNumberContact\":\"ContactList_itemNumberContact__Kk8M1\",\"btnOfListContact\":\"ContactList_btnOfListContact__3Uw_T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerForm\":\"ContactForm_containerForm__1Zcdj\",\"formInput\":\"ContactForm_formInput__3A43J\",\"btnForm\":\"ContactForm_btnForm__2xya1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__1uj5g\",\"filterLabel\":\"Filter_filterLabel__1keIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2gATY\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\nexport default { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter };","import Axios from 'axios';\r\nimport shortid from 'shortid';\r\n\r\nimport actions from './phonebook-actions';\r\n\r\nAxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n    dispatch(actions.fetchContactsRequest());\r\n    try {\r\n        const { data } = await Axios.get('/contacts');\r\n        dispatch(actions.fetchContactsSuccess(data))\r\n    } catch (error) {\r\n        dispatch(actions.fetchContactsError(error))\r\n    }\r\n};\r\n\r\nconst addContact = text => dispatch => {\r\n    dispatch(actions.addContactRequest());\r\n    const contact = {\r\n        id: shortid.generate(),\r\n        name: text.name,\r\n        number: text.number,\r\n    };\r\n    \r\n    Axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n        .catch(({ error }) => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n    dispatch(actions.deleteContactRequest());\r\n    \r\n    Axios\r\n        .delete(`/contacts/${contactId}`)\r\n        .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n        .catch(({ error }) => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\nexport default {fetchContacts, addContact, deleteContact};","import { Component } from 'react';\nimport s from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../../redux/phonebook-operations';\n\nclass ContactForm extends Component {\n  state = {\n    id: '',\n    name: '',\n    number: '',\n  };\n\n  onNameChange = e => {\n    this.setState({ name: e.currentTarget.value });\n  };\n\n  onNumberChange = e => {\n    this.setState({ number: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.number !== '') {\n      this.props.onSubmit(this.state);\n      this.setState({ name: '', number: '' });\n      return;\n    }\n    alert('Заполните данные контакта!');\n  };\n\n  render() {\n    return (\n      <form className={s.containerForm} onSubmit={this.handleSubmit}>\n        <label>\n          <p>Name</p>\n          <input\n            className={s.formInput}\n            type=\"text\"\n            onChange={this.onNameChange}\n            value={this.state.name}\n          />\n        </label>\n        <label>\n          <p>Number</p>\n          <input\n            className={s.formInput}\n            type=\"text\"\n            onChange={this.onNumberChange}\n            value={this.state.number}\n          />\n        </label>\n        <button className={s.btnForm} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ id, name, number }) =>\n    dispatch(phonebookOperations.addContact({ id, name, number })),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import { createSelector } from '@reduxjs/toolkit';\r\n    \r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getVisibleContacts = createSelector(\r\n    [getAllContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normolizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normolizedFilter),\r\n        );\r\n    }\r\n);\r\n\r\nexport default {getAllContacts, getFilter, getVisibleContacts};","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport phonebookOperations from '../../redux/phonebook-operations';\nimport contactsSelectors from '../../redux/phonebook-selectors';\n\nfunction ContactList({ contacts = [], onDeleteContact }) {\n  return (\n    <>\n      <ul className={s.listOfContact}>\n        {contacts.map(contact => (\n          <li key={contact.id} className={s.itemOfListContact}>\n            <p className={s.itemNameContact}>{contact.name} </p>\n            <p className={s.itemNumberContact}>{contact.number}</p>\n            <button\n              className={s.btnOfListContact}\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: contactId =>\n    dispatch(phonebookOperations.deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/phonebook-actions';\nimport contactsSelectors from '../../redux/phonebook-selectors';\n\n\nconst Filter = ({ value = '', onChangeFilter }) => {\n  return (\n    <>\n      <label className={s.filterLabel}>\n        Filter contacts by name\n        <input\n          className={s.filterInput}\n          type=\"text\"\n          value={value}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e =>\n    dispatch(actions.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import './App.css';\nimport s from './App.module.css';\nimport { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default connect()(App);\n\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions from './phonebook-actions';\n\nconst items = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, {payload}) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => {\n    if (\n      state.find(contact =>\n        contact.name.toLowerCase().includes(payload.name.toLowerCase()),\n      )\n    ) {\n      alert(`${payload.name} is already in contacts`);\n    } else {\n      return [payload, ...state];\n    }\n  },\n\n  [actions.deleteContactSuccess]: (state, { payload }) => {\n    return state.filter(contact => payload !== contact.id);\n  },\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n  [actions.deleteContactSuccess]: (state, { payload }) => '',\n});\n\nconst error = createReducer('', {\n  [actions.fetchContactsError]: (state, { payload }) => payload.message,\n  [actions.addContactError]: (state, { payload }) => payload.message,\n  [actions.deleteContactError]: (state, { payload }) => payload.message,\n})\n\nexport default combineReducers({\n  items,\n  filter,\n  error\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport phonebookReducer from './phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware(),\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: phonebookReducer,\n  },\n  middleware,\n});\n\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}